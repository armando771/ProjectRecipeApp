{"version":3,"sources":["services/mealAPI.js","services/cocktailAPI.js","images/shareIcon.svg","context/FoodContext.js","context/DrinkContext.js","images/whiteHeartIcon.svg","images/blackHeartIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","components/SearchBar.jsx","pages/Login.js","components/Footer.js","components/Header.js","pages/Profile.js","components/CategoryButtons.js","components/RecipeCard.js","pages/MainFoods.js","pages/MainDrinks.js","components/Carousel.js","auxiliar/auxiliarFunctions.js","pages/FoodDetails.js","pages/DrinkDetails.js","pages/mainFoodsInProgress.js","pages/mainDrinksInProgress.js","context/FavoritesContext.js","components/ShareButton.js","components/UnfavoriteButton.js","components/FavoriteRecipeCard.js","pages/FavoriteRecipes.js","pages/Explore.js","pages/ExploreFoods.js","pages/ExploreDrinks.js","components/IngredientCard.js","pages/Ingredients.js","components/FinishedDrinkCard.js","components/FinishedMealCard.js","pages/RecipesMade.js","pages/Area.js","provider/FoodProvider.js","provider/DrinkProvider.js","provider/FavoritesProvider.js","App.js","serviceWorker.js","index.js"],"names":["FOOD_BY_INGREDIENT","FOOD_API_URL","FOODS_BY_CATEGORY","FOOD_BY_ID","RANDOM_MEAL","FOOD_AREA","FOOD_FILTER_AREA","fetchFoods","a","fetch","fetchURL","json","fetchFoodCategories","fetchFoodByCategoryName","categoryName","fetchFoodById","id","data","fetchFoodByIngredient","ingredient","fetchFoodByFilters","filters","inputSearch","name","firstLetter","response","meals","length","global","alert","fetchRandomMeal","fetchByArea","fetchFilterByArea","area","COCKTAIL_BY_INGREDIENT","COCKTAIL_API_URL","DRINK_BY_CATEGORY","DRINK_BY_ID","RANDOM_DRINK","fetchCocktails","fetchCocktailCategories","fetchDrinkByCategoryName","fetchDrinkById","fetchDrinkByIngredient","fetchCocktailByFilters","drinks","fetchRandomDrink","module","exports","FoodContext","createContext","DrinkContext","SearchBar","defaultFilters","useState","setFilters","setFoods","useContext","setDrinks","foods","to","idDrink","idMeal","handleChangeCheck","target","obj","value","checked","searchFilters","window","location","pathname","includes","foodList","drinkList","htmlFor","type","onChange","data-testid","placeholder","onClick","handleSearch","Login","email","setEmail","password","setPassword","buttonDisabled","setButtonDisabled","useEffect","match","handleChange","func","e","disabled","localStorage","setItem","JSON","stringify","Footer","className","src","drinkIcon","alt","exploreIcon","mealIcon","Header","props","searchBar","SetSearchBar","title","showRender","showSearchBar","profileIcon","searchIcon","defaultProps","Profile","SetEmail","getLocal","parse","getItem","history","push","clear","CategoryButtons","categories","useLocation","buttons","document","querySelectorAll","resetAllCheckbox","index","map","key","strCategory","ev","then","handleFilterByCategoryNameFOODS","handleFilterByCategoryNameDRINKS","handleFilterAll","RecipeCard","recipe","dataId","strMealThumb","strDrinkThumb","width","strMeal","strDrink","MainFoods","ing","removeItem","slice","MainDrinks","Carousel","recommendation","itemShow","setItemShow","initialIndex","setInitialIndex","lastIndex","setLastIndex","pathToGo","setPathToGo","item","i","hidden","getFavorites","allFavorites","favImageWhite","find","favImageBlack","handleClick","handleButton","handleShare","setLink","actualLocation","origin","href","dummy","createElement","body","appendChild","select","execCommand","removeChild","handleFavoriteAuxiliar","objSave","setIcon","icon","actual","FoodDetails","params","useHistory","isFavorite","foodInfo","setFoodInfo","recDrink","setRecDrinks","ingredients","setIngredients","link","forEach","arr","itemIngredient","itemMeasure","strMeasure","strIngredient","handleFavorite","strArea","category","alcoholicOrNot","image","shareImage","ingrID","strInstructions","height","strYoutube","split","DrinkDetails","drinkDetails","setDrinkDetails","recMeal","setRecMeal","strAlcoholic","MainFoodsInProgress","localStorageChecked","getLocalStorage","Object","keys","storage","auxiliar","disable","setDisable","checkArray","SetCheckArray","objeto","saveInLocal","handleLinks","String","input","verifyChecked","inputs","food","textContent","riskCompleteds","dateNow","Date","formatDate","objToSave","tagFormat","strTags","doneDate","tags","doneRecipes","MainDrinkInProgress","drinkInfo","setdrinkInfo","drink","FavoritesContext","ShareButton","recipeId","isFood","displayToast","setDisplayToast","undefined","copy","setTimeout","shareIcon","UnfavoriteButton","favorites","setFavorites","fav","setIsFavorite","favoriteRecipes","updatedFavorites","filter","handleFavoriteClick","blackHeartIcon","whiteHeartIcon","FavoriteRecipeCard","FavoriteRecipes","setFilter","filteredFavorites","enableSearchIcon","Explore","ExploreFoods","setId","getRandomMeal","createBtn","testId","text","ExploreDrinks","getRandomDrink","IngredientCard","strIngredient1","whichType","ingredientToSave","Ingredients","r","__","FinishedDrinkCard","card","FinishedMealCard","RecipesMade","recipes","setRecipes","getInfo","getAll","filterFood","filterDrink","Area","LOCATION","SetArea","receitas","setReceitas","selected","areaSelected","setAreaSelected","list","GetAreaOrigin","GetRecipes","event","FoodProvider","children","setCategories","Provider","DrinkProvider","FavoritesProvider","App","exact","path","component","mainFoodsInProgress","mainDrinksInProgress","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39e0f712.chunk.js","sourcesContent":["const FOOD_BY_INGREDIENT = 'https://www.themealdb.com/api/json/v1/1/filter.php?i=';\nconst FOOD_API_URL = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\nconst FOOD_BY_FIRST_LETTER = 'https://www.themealdb.com/api/json/v1/1/search.php?f=';\nconst FOOD_CATEGORIES_API_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\nconst FOODS_BY_CATEGORY = 'https://www.themealdb.com/api/json/v1/1/filter.php?c=';\nconst FOOD_BY_ID = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\nconst RANDOM_MEAL = 'https://www.themealdb.com/api/json/v1/1/random.php';\nconst FOOD_AREA = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\nconst FOOD_FILTER_AREA = 'https://www.themealdb.com/api/json/v1/1/filter.php?a=';\n\nexport async function fetchFoods() {\n  const fetchURL = await fetch(FOOD_API_URL);\n  return fetchURL.json();\n}\n\nexport async function fetchFoodCategories() {\n  const fetchURL = await fetch(FOOD_CATEGORIES_API_URL);\n  return fetchURL.json();\n}\n\nexport async function fetchFoodByCategoryName(categoryName) {\n  const fetchURL = await fetch(`${FOODS_BY_CATEGORY}${categoryName}`);\n  return fetchURL.json();\n}\n\nexport async function fetchFoodById(id) {\n  const fetchURL = await fetch(`${FOOD_BY_ID}${id}`);\n  const data = await fetchURL.json();\n  return data;\n}\n\nexport async function fetchFoodByIngredient(ingredient) {\n  const fetchURL = await fetch(`${FOOD_BY_INGREDIENT}${ingredient}`);\n  const data = await fetchURL.json();\n  return data;\n}\n\nexport async function fetchFoodByFilters(filters) {\n  const { inputSearch, ingredient, name, firstLetter } = filters;\n  let response = [];\n  if (ingredient) {\n    const fetchURL = await fetch(FOOD_BY_INGREDIENT + inputSearch);\n    const { meals } = await fetchURL.json();\n    response = meals;\n  }\n  if (name) {\n    const fetchURL = await fetch(FOOD_API_URL + inputSearch);\n    const { meals } = await fetchURL.json();\n    response = meals;\n  }\n  if (firstLetter) {\n    if (inputSearch.length > 1) {\n      response = global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n    const fetchURL = await fetch(FOOD_BY_FIRST_LETTER + inputSearch);\n    const { meals } = await fetchURL.json();\n    response = meals;\n  }\n  return response;\n}\n\nexport async function fetchRandomMeal() {\n  const fetchURL = await fetch(RANDOM_MEAL);\n  return fetchURL.json();\n}\n\nexport async function fetchByArea() {\n  const fetchURL = await fetch(FOOD_AREA);\n  return fetchURL.json();\n}\n\nexport async function fetchFilterByArea(area) {\n  const fetchURL = await fetch(`${FOOD_FILTER_AREA}${area}`);\n  return fetchURL.json();\n}\n","const COCKTAIL_BY_INGREDIENT = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\nconst COCKTAIL_API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst COCKTAIL_BY_FIRST_LETTER = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?f=';\nconst COCKTAIL_CATEGORIES_API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\nconst DRINK_BY_CATEGORY = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=';\nconst DRINK_BY_ID = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=';\nconst RANDOM_DRINK = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n\nexport async function fetchCocktails() {\n  const fetchURL = await fetch(COCKTAIL_API_URL);\n  return fetchURL.json();\n}\n\nexport async function fetchCocktailCategories() {\n  const fetchURL = await fetch(COCKTAIL_CATEGORIES_API_URL);\n  return fetchURL.json();\n}\n\nexport async function fetchDrinkByCategoryName(categoryName) {\n  const fetchURL = await fetch(`${DRINK_BY_CATEGORY}${categoryName}`);\n  return fetchURL.json();\n}\n\nexport async function fetchDrinkById(id) {\n  const fetchURL = await fetch(`${DRINK_BY_ID}${id}`);\n  const data = await fetchURL.json();\n  return data;\n}\n\nexport async function fetchDrinkByIngredient(ingredient) {\n  const fetchURL = await fetch(`${COCKTAIL_BY_INGREDIENT}${ingredient}`);\n  const data = await fetchURL.json();\n  return data;\n}\n\nexport async function fetchCocktailByFilters(filters) {\n  const { inputSearch, ingredient, name, firstLetter } = filters;\n  let response = [];\n  if (ingredient) {\n    const fetchURL = await fetch(COCKTAIL_BY_INGREDIENT + inputSearch);\n    const { drinks } = await fetchURL.json();\n    response = drinks;\n  }\n  if (name) {\n    const fetchURL = await fetch(COCKTAIL_API_URL + inputSearch);\n    const { drinks } = await fetchURL.json();\n    response = drinks;\n  }\n  if (firstLetter) {\n    if (inputSearch.length > 1) {\n      response = global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n    const fetchURL = await fetch(COCKTAIL_BY_FIRST_LETTER + inputSearch);\n    const { drinks } = await fetchURL.json();\n    response = drinks;\n  }\n  return response;\n}\n\nexport async function fetchRandomDrink() {\n  const fetchURL = await fetch(RANDOM_DRINK);\n  return fetchURL.json();\n}\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","import { createContext } from 'react';\n\nconst FoodContext = createContext();\n\nexport default FoodContext;\n","import { createContext } from 'react';\n\nconst DrinkContext = createContext();\n\nexport default DrinkContext;\n","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","import React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { fetchFoodByFilters } from '../services/mealAPI';\nimport { fetchCocktailByFilters } from '../services/cocktailAPI';\nimport FoodContext from '../context/FoodContext';\nimport DrinkContext from '../context/DrinkContext';\n\nfunction SearchBar() {\n  const defaultFilters = {\n    inputSearch: '',\n    ingredient: false,\n    name: false,\n    firstLetter: false,\n  };\n\n  const [filters, setFilters] = useState(defaultFilters);\n  const { setFoods } = useContext(FoodContext);\n  const { setDrinks } = useContext(DrinkContext);\n\n  const { drinks } = useContext(DrinkContext);\n  const { foods } = useContext(FoodContext);\n\n  if (drinks === null) {\n    global.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  }\n\n  if (drinks !== null && drinks.length === 1) {\n    return <Redirect to={ `bebidas/${drinks[0].idDrink}` } />;\n  }\n\n  if (foods === null) {\n    global.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  }\n\n  if (foods !== null && foods.length === 1) {\n    return <Redirect to={ `comidas/${foods[0].idMeal}` } />;\n  }\n\n  function handleChange({ target }) {\n    const obj = { ...filters };\n    obj[target.name] = target.value;\n    setFilters(obj);\n  }\n\n  function handleChangeCheck({ target }) {\n    const obj = { ...defaultFilters };\n    obj.inputSearch = filters.inputSearch;\n    obj[target.value] = target.checked;\n    setFilters(obj);\n  }\n\n  async function handleSearch(searchFilters) {\n    if (window.location.pathname.includes('comidas')) {\n      const foodList = await fetchFoodByFilters(searchFilters);\n      setFoods(foodList);\n    } else {\n      const drinkList = await fetchCocktailByFilters(searchFilters);\n      setDrinks(drinkList);\n    }\n  }\n\n  return (\n    <section>\n      <label htmlFor=\"searchText\">\n        Search:\n        <input\n          id=\"searchText\"\n          type=\"text\"\n          name=\"inputSearch\"\n          value={ filters.inputSearch }\n          onChange={ handleChange }\n          data-testid=\"search-input\"\n          placeholder=\"Find Recipe\"\n        />\n      </label>\n      <label htmlFor=\"ingredientSearch\">\n        <input\n          id=\"ingredientSearch\"\n          type=\"radio\"\n          name=\"search\"\n          value=\"ingredient\"\n          onChange={ handleChangeCheck }\n          data-testid=\"ingredient-search-radio\"\n        />\n        Ingredient\n      </label>\n      <label htmlFor=\"nameSearch\">\n        <input\n          id=\"nameSearch\"\n          type=\"radio\"\n          name=\"search\"\n          value=\"name\"\n          onChange={ handleChangeCheck }\n          data-testid=\"name-search-radio\"\n        />\n        Name\n      </label>\n      <label htmlFor=\"firstLetterSearch\">\n        <input\n          id=\"firstLetterSearch\"\n          type=\"radio\"\n          name=\"search\"\n          value=\"firstLetter\"\n          onChange={ handleChangeCheck }\n          data-testid=\"first-letter-search-radio\"\n        />\n        First Letter\n      </label>\n      <button\n        data-testid=\"exec-search-btn\"\n        type=\"button\"\n        onClick={ () => handleSearch(filters) }\n      >\n        Find\n      </button>\n    </section>\n  );\n}\n\nexport default SearchBar;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n\n  useEffect(() => {\n    const handleValidation = () => {\n      const MIN_PASSWORD = 6;\n      const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (password.length <= MIN_PASSWORD || !email.match(regex)) {\n        return setButtonDisabled(true);\n      }\n      return setButtonDisabled(false);\n    };\n    handleValidation();\n  }, [email, password]);\n\n  const handleChange = async (func, { target: { value } }) => {\n    func(value);\n  };\n\n  const handleClick = () => {\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({ email }));\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <input\n        type=\"email\"\n        data-testid=\"email-input\"\n        placeholder=\"E-mail\"\n        onChange={ (e) => handleChange(setEmail, e) }\n      />\n      <input\n        type=\"password\"\n        data-testid=\"password-input\"\n        placeholder=\"Password\"\n        onChange={ (e) => handleChange(setPassword, e) }\n      />\n      <Link to=\"/comidas\">\n        <button\n          data-testid=\"login-submit-btn\"\n          type=\"button\"\n          disabled={ buttonDisabled }\n          onClick={ handleClick }\n        >\n          Entrar\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport '../styles/Footer.css';\n\n// O menu inferior deve ter possuir o atributo data-testid=\"footer\";\n// drinks deve possuir o atributo data-testid=\"drinks-bottom-btn\";\n// explorar deve possuir o atributo data-testid=\"explore-bottom-btn\";\n// comidas deve possuir o atributo data-testid=\"food-bottom-btn\".\n\nconst Footer = () => (\n  <footer data-testid=\"footer\" className=\"fixedbottom\">\n    <Link\n      to=\"/bebidas\"\n    >\n      <img\n        src={ drinkIcon }\n        alt=\"drinks\"\n        data-testid=\"drinks-bottom-btn\"\n      />\n    </Link>\n    <Link\n      to=\"/explorar\"\n    >\n      <img\n        alt=\"explore\"\n        src={ exploreIcon }\n        data-testid=\"explore-bottom-btn\"\n      />\n    </Link>\n    <Link\n      to=\"/comidas\"\n    >\n      <img\n        src={ mealIcon }\n        alt=\"meal\"\n        data-testid=\"food-bottom-btn\"\n      />\n    </Link>\n  </footer>\n);\nexport default Footer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\n\nfunction Header(props) {\n  const [searchBar, SetSearchBar] = useState(false);\n  const { title, showRender } = props;\n\n  function showSearchBar() {\n    if (searchBar === false) {\n      SetSearchBar(true);\n    } else {\n      SetSearchBar(false);\n    }\n  }\n\n  const teste = () => {\n    const renderBar = (\n      <button type=\"button\" onClick={ showSearchBar }>\n        <img src={ searchIcon } alt=\"icone-de-pesquisar\" data-testid=\"search-top-btn\" />\n      </button>\n    );\n    return renderBar;\n  };\n\n  return (\n    <header>\n      <Link to=\"/perfil\">\n        <img src={ profileIcon } alt=\"icone-perfil\" data-testid=\"profile-top-btn\" />\n      </Link>\n      <h3 data-testid=\"page-title\">{ title }</h3>\n      { showRender && teste() }\n      {\n        searchBar ? <SearchBar /> : null\n      }\n    </header>\n  );\n}\n\nHeader.defaultProps = {\n  showRender: true,\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  showRender: PropTypes.bool,\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction Profile(props) {\n  const [email, SetEmail] = useState();\n\n  useEffect(() => {\n    const getLocal = JSON.parse(localStorage.getItem('user'));\n    if (getLocal) SetEmail(getLocal.email);\n    else SetEmail('');\n  }, [email]);\n\n  const FavoriteRecipes = () => {\n    const { history } = props;\n    history.push('/receitas-favoritas');\n  };\n\n  const RecipesMade = () => {\n    const { history } = props;\n    history.push('/receitas-feitas');\n  };\n\n  const BackToLogin = () => {\n    const { history } = props;\n    localStorage.clear();\n    history.push('/ProjectRecipeApp');\n  };\n\n  return (\n    <>\n      <Header title=\"Perfil\" showRender={ false } />\n      <h4 data-testid=\"profile-email\">{ email }</h4>\n      <button\n        type=\"button\"\n        data-testid=\"profile-done-btn\"\n        onClick={ () => RecipesMade() }\n      >\n        Receitas Feitas\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"profile-favorite-btn\"\n        onClick={ () => FavoriteRecipes() }\n      >\n        Receitas Favoritas\n      </button>\n      <button\n        type=\"button\"\n        onClick={ BackToLogin }\n        data-testid=\"profile-logout-btn\"\n      >\n        Sair\n      </button>\n      <Footer />\n    </>\n  );\n}\n\nProfile.propTypes = {\n  history: PropTypes.func.isRequired,\n};\n\nexport default Profile;\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport FoodContext from '../context/FoodContext';\nimport DrinkContext from '../context/DrinkContext';\nimport { fetchFoodByCategoryName, fetchFoods } from '../services/mealAPI';\nimport { fetchDrinkByCategoryName, fetchCocktails } from '../services/cocktailAPI';\n\nconst NUMBER_OF_CATEGORIES = 5;\n\nexport default function CategoryButtons({ categories }) {\n  const { setFoods } = useContext(FoodContext);\n  const { setDrinks } = useContext(DrinkContext);\n  const { pathname } = useLocation();\n  const buttons = document.querySelectorAll('.category-buttons');\n  const checked = false;\n\n  function resetAllCheckbox() {\n    for (let index = 0; index < buttons.length; index += 1) {\n      buttons[index].checked = false;\n    }\n  }\n\n  function handleFilterByCategoryNameFOODS(ev, categoryName) {\n    if (ev.target.checked) {\n      fetchFoodByCategoryName(categoryName).then((data) => setFoods(data.meals));\n      resetAllCheckbox();\n      ev.target.checked = true;\n    } else if (ev.target.checked === false) {\n      fetchFoods().then((data) => setFoods(data.meals));\n      resetAllCheckbox();\n    } else if (ev.target.checked === !checked) {\n      fetchFoods().then((data) => setFoods(data.meals));\n      resetAllCheckbox();\n      ev.target.checked = !checked;\n    }\n  }\n\n  function handleFilterByCategoryNameDRINKS(ev, categoryName) {\n    if (ev.target.checked) {\n      fetchDrinkByCategoryName(categoryName).then((data) => setDrinks(data.drinks));\n      resetAllCheckbox();\n      ev.target.checked = true;\n    } else if (ev.target.checked === false) {\n      fetchCocktails().then((data) => setDrinks(data.drinks));\n      resetAllCheckbox();\n    } else if (ev.target.checked === !checked) {\n      fetchCocktails().then((data) => setDrinks(data.drinks));\n      resetAllCheckbox();\n      ev.target.checked = !checked;\n    }\n  }\n\n  function handleFilterAll(ev) {\n    if (pathname === '/comidas') {\n      fetchFoods().then((data) => setFoods(data.meals));\n      resetAllCheckbox();\n      ev.target.checked = !checked;\n    }\n    if (pathname === '/bebidas') {\n      fetchCocktails().then((data) => setDrinks(data.drinks));\n      resetAllCheckbox();\n      ev.target.checked = !checked;\n    }\n  }\n\n  return (\n    <div>\n      {categories.map((categoryName, index) => (\n        index < NUMBER_OF_CATEGORIES ? (\n          <label htmlFor=\"category-button\" key={ index }>\n            <input\n              name=\"category-buttons\"\n              value={ categoryName.strCategory }\n              type=\"checkbox\"\n              key={ index }\n              data-testid={ `${categoryName.strCategory}-category-filter` }\n              onClick={ (ev) => {\n                if (pathname === '/comidas') {\n                  handleFilterByCategoryNameFOODS(ev, categoryName.strCategory);\n                } else if (pathname === '/bebidas') {\n                  handleFilterByCategoryNameDRINKS(ev, categoryName.strCategory);\n                }\n              } }\n            />\n            {categoryName.strCategory}\n          </label>\n        ) : null\n      ))}\n      <label htmlFor=\"category-buttons\">\n        <input\n          type=\"checkbox\"\n          name=\"category-buttons\"\n          data-testid=\"All-category-filter\"\n          onClick={ (ev) => handleFilterAll(ev) }\n        />\n        All\n      </label>\n    </div>\n  );\n}\n\nCategoryButtons.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.shape({})),\n}.isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function RecipeCard({ recipe, index, type, dataId = '-card-name' }) {\n  return (\n    <Link\n      to={\n        type === '/comidas'\n          ? `/comidas/${recipe.idMeal}`\n          : `/bebidas/${recipe.idDrink}`\n      }\n    >\n      <div data-testid={ `${index}-recipe-card` }>\n        <img\n          data-testid={ `${index}-card-img` }\n          src={ type === '/comidas' ? recipe.strMealThumb : recipe.strDrinkThumb }\n          alt=\"thumbnail recipe\"\n          width=\"100\"\n        />\n        <p data-testid={ `${index}${dataId}` }>\n          { type === '/comidas' ? recipe.strMeal : recipe.strDrink }\n        </p>\n      </div>\n    </Link>\n  );\n}\n\nRecipeCard.propTypes = {\n  recipe: PropTypes.shape({}),\n  index: PropTypes.number,\n  type: PropTypes.string,\n}.isRequired;\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport CategoryButtons from '../components/CategoryButtons';\nimport RecipeCard from '../components/RecipeCard';\nimport FoodContext from '../context/FoodContext';\nimport { fetchFoodByIngredient } from '../services/mealAPI';\n\nexport default function MainFoods() {\n  const NUMBER_OF_RECIPES = 12;\n  const { pathname } = useLocation();\n  const { foods, categories, setFoods } = useContext(FoodContext);\n\n  const ing = localStorage.getItem('filterIngredient');\n  if (ing) {\n    fetchFoodByIngredient(ing).then(({ meals }) => setFoods(meals));\n    localStorage.removeItem('filterIngredient');\n  }\n\n  return (\n    <div>\n      <Header title=\"Comidas\" />\n      <CategoryButtons categories={ categories } />\n\n      <ul>\n        { foods && foods.slice(0, NUMBER_OF_RECIPES)\n          .map((recipe, index) => (\n            <RecipeCard\n              key={ index }\n              recipe={ recipe }\n              index={ index }\n              type={ pathname }\n            />\n          ))}\n      </ul>\n      <Footer />\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport CategoryButtons from '../components/CategoryButtons';\nimport RecipeCard from '../components/RecipeCard';\nimport DrinkContext from '../context/DrinkContext';\nimport { fetchDrinkByIngredient } from '../services/cocktailAPI';\n\nexport default function MainDrinks() {\n  const NUMBER_OF_RECIPES = 12;\n  const { pathname } = useLocation();\n  const { drinks, categories, setDrinks } = useContext(DrinkContext);\n\n  const ing = localStorage.getItem('filterIngredient');\n  if (ing) {\n    fetchDrinkByIngredient(ing).then((data) => setDrinks(data.drinks));\n    localStorage.removeItem('filterIngredient');\n  }\n\n  return (\n    <>\n      <Header title=\"Bebidas\" />\n      <CategoryButtons categories={ categories } />\n\n      <ul>\n        {drinks && drinks.slice(0, NUMBER_OF_RECIPES)\n          .map((recipe, index) => (\n            <RecipeCard\n              key={ index }\n              recipe={ recipe }\n              index={ index }\n              type={ pathname }\n            />\n          ))}\n      </ul>\n      <Footer />\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport RecipeCard from './RecipeCard';\n\nfunction Carousel({ recommendation }) {\n  const { pathname } = useLocation();\n  const [itemShow, setItemShow] = useState([]);\n  const [initialIndex, setInitialIndex] = useState(0);\n  const [lastIndex, setLastIndex] = useState(1);\n  const [pathToGo, setPathToGo] = useState('');\n\n  useEffect(() => {\n    const TOTAL_RECOMMENDATIONS = 6;\n    setItemShow(recommendation.slice(0, TOTAL_RECOMMENDATIONS));\n  }, [recommendation]);\n\n  useEffect(() => {\n    if (pathname.includes('/comidas')) {\n      setPathToGo('/bebidas');\n    } else {\n      setPathToGo('/comidas');\n    }\n  }, [pathname]);\n\n  const handlePrevious = () => {\n    const FOUR = 4;\n    const FIVE = 5;\n    if (initialIndex === 0) {\n      setInitialIndex(FOUR);\n      setLastIndex(FIVE);\n    } else {\n      setInitialIndex(initialIndex - 2);\n      setLastIndex(lastIndex - 2);\n    }\n  };\n\n  const handleNext = () => {\n    const FOUR = 4;\n    if (initialIndex === FOUR) {\n      setInitialIndex(0);\n      setLastIndex(1);\n    } else {\n      setInitialIndex(initialIndex + 2);\n      setLastIndex(lastIndex + 2);\n    }\n  };\n\n  return (\n    <div>\n      { itemShow.map((item, i) => {\n        if (i === initialIndex || i === lastIndex) {\n          return (\n            <div key={ i } data-testid={ `${i}-recomendation-card` }>\n              <RecipeCard\n                recipe={ item }\n                index={ i }\n                type={ pathToGo }\n                dataId=\"-recomendation-title\"\n              />\n            </div>\n          );\n        }\n        return (\n          <div key={ i } data-testid={ `${i}-recomendation-card` } hidden>\n            <RecipeCard\n              recipe={ item }\n              index={ i }\n              type={ pathToGo }\n              dataId=\"-recomendation-title\"\n            />\n          </div>\n        );\n      }) }\n      <button type=\"button\" onClick={ handlePrevious }>Previous</button>\n      <button type=\"button\" onClick={ handleNext }>Next</button>\n    </div>\n  );\n}\n\nCarousel.propTypes = {\n  recommendation: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport favImageBlack from '../images/blackHeartIcon.svg';\nimport favImageWhite from '../images/whiteHeartIcon.svg';\n\nexport const getFavorites = (id) => {\n  const allFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (allFavorites === null) {\n    return favImageWhite;\n  }\n  const itemFound = allFavorites.find((item) => item.id === id);\n  if (itemFound) {\n    return favImageBlack;\n  }\n  return favImageWhite;\n};\n\nexport const handleClick = (history) => {\n  const { location: { pathname } } = history;\n  history.push(`${pathname}/in-progress`);\n};\n\nexport const handleButton = (history) => {\n  const obj = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (!obj) {\n    return (\n      <button\n        className=\"fixedbutton\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ () => handleClick(history) }\n      >\n        Iniciar Receita\n      </button>\n    );\n  }\n  return (\n    <button\n      className=\"fixedbutton\"\n      type=\"button\"\n      data-testid=\"start-recipe-btn\"\n      onClick={ () => handleClick(history) }\n    >\n      Continuar Receita\n    </button>\n  );\n};\n\nexport const handleShare = (setLink, id = '') => {\n  setLink('Link copiado!');\n  let actualLocation;\n  if (id.length) {\n    actualLocation = `${document.location.origin}/${id}`;\n  } else {\n    actualLocation = window.location.href;\n  }\n  const dummy = document.createElement('input');\n  document.body.appendChild(dummy);\n  dummy.value = actualLocation;\n  dummy.select();\n  document.execCommand('copy');\n  document.body.removeChild(dummy);\n};\n\nexport const handleFavoriteAuxiliar = (objSave, setIcon, icon) => {\n  if (icon === favImageWhite) {\n    setIcon(favImageBlack);\n    const actual = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (actual !== null) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...actual, objSave]));\n    } else {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([objSave]));\n    }\n  } else {\n    setIcon(favImageWhite);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { fetchFoodById } from '../services/mealAPI';\nimport { fetchCocktails } from '../services/cocktailAPI';\nimport '../styles/Details.css';\nimport shareImage from '../images/shareIcon.svg';\nimport Carousel from '../components/Carousel';\nimport { getFavorites, handleButton, handleShare, handleFavoriteAuxiliar }\n  from '../auxiliar/auxiliarFunctions';\n\nconst youtubeEmbed = 'https://www.youtube.com/embed/';\nfunction FoodDetails({ match: { params: { id } } }) {\n  const history = useHistory();\n  const isFavorite = getFavorites(id);\n  const [foodInfo, setFoodInfo] = useState([]);\n  const [recDrink, setRecDrinks] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [link, setLink] = useState('');\n  const [icon, setIcon] = useState(isFavorite);\n\n  useEffect(() => {\n    fetchFoodById(id).then(({ meals }) => {\n      const MAX_INGREDIENT = 20;\n      meals.forEach((item) => {\n        let arr = [];\n        for (let i = 1; i <= MAX_INGREDIENT; i += 1) {\n          const itemIngredient = `strIngredient${i}`;\n          const itemMeasure = `strMeasure${i}`;\n          if (item[itemIngredient].length === 0) {\n            setIngredients([...arr]);\n            break;\n          }\n          arr = [\n            ...arr,\n            { strMeasure: item[itemMeasure], strIngredient: item[itemIngredient] },\n          ];\n        }\n      });\n      setFoodInfo(meals);\n    });\n    fetchCocktails().then(({ drinks }) => setRecDrinks(drinks));\n  }, [id]);\n\n  if (foodInfo.length === 0) {\n    return <h1>Loading...</h1>;\n  }\n\n  const handleFavorite = () => {\n    const objSave = foodInfo.map((item) => {\n      const obj = {\n        id: item.idMeal,\n        type: 'comida',\n        area: item.strArea,\n        category: item.strCategory,\n        alcoholicOrNot: '',\n        name: item.strMeal,\n        image: item.strMealThumb,\n      };\n      return obj;\n    })[0];\n    handleFavoriteAuxiliar(objSave, setIcon, icon);\n  };\n  return (\n    <div>\n      { foodInfo.map((item) => {\n        const all = (\n          <div key={ item.idMeal }>\n            <img\n              src={ item.strMealThumb }\n              alt={ item.strMeal }\n              data-testid=\"recipe-photo\"\n              width=\"250px\"\n            />\n            <h1 data-testid=\"recipe-title\">{ item.strMeal }</h1>\n            <input\n              type=\"image\"\n              alt=\"share\"\n              src={ shareImage }\n              data-testid=\"share-btn\"\n              onClick={ () => handleShare(setLink) }\n            />\n            <p>{ link }</p>\n            <input\n              type=\"image\"\n              alt=\"fav\"\n              src={ icon }\n              data-testid=\"favorite-btn\"\n              onClick={ handleFavorite }\n            />\n            <h2 data-testid=\"recipe-category\">{ item.strCategory }</h2>\n            <div>\n              { ingredients.map(({ strMeasure, strIngredient }, i) => {\n                const ingrID = `${i}-ingredient-name-and-measure`;\n                const allIngredients = (\n                  <p data-testid={ ingrID } key={ ingrID }>\n                    { `${strMeasure} ${strIngredient}` }\n                  </p>\n                );\n                return allIngredients;\n              }) }\n            </div>\n            <p data-testid=\"instructions\">{ item.strInstructions }</p>\n            <iframe\n              data-testid=\"video\"\n              width=\"420\"\n              height=\"315\"\n              title=\"recipe\"\n              src={ `${youtubeEmbed}${item.strYoutube.split('?v=')[1]}` }\n            />\n            <Carousel recommendation={ recDrink } />\n            { handleButton(history) }\n          </div>\n        );\n        return all;\n      }) }\n    </div>\n  );\n}\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default FoodDetails;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchFoods } from '../services/mealAPI';\nimport { fetchDrinkById } from '../services/cocktailAPI';\nimport '../styles/Details.css';\nimport shareImage from '../images/shareIcon.svg';\nimport Carousel from '../components/Carousel';\nimport { getFavorites, handleButton, handleShare, handleFavoriteAuxiliar }\n  from '../auxiliar/auxiliarFunctions';\n\nfunction DrinkDetails({ history, match: { params: { id } } }) {\n  const isFavorite = getFavorites(id);\n  const [drinkDetails, setDrinkDetails] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [recMeal, setRecMeal] = useState([]);\n  const [link, setLink] = useState('');\n  const [icon, setIcon] = useState(isFavorite);\n\n  useEffect(() => {\n    fetchDrinkById(id).then(({ drinks }) => {\n      const MAX_INGREDIENT = 20;\n      drinks.forEach((item) => {\n        let arr = [];\n        for (let i = 1; i <= MAX_INGREDIENT; i += 1) {\n          const itemIngredient = `strIngredient${i}`;\n          const itemMeasure = `strMeasure${i}`;\n          if (item[itemIngredient] === null) {\n            setIngredients([...arr]);\n            break;\n          }\n          arr = [\n            ...arr,\n            { strMeasure: item[itemMeasure], strIngredient: item[itemIngredient] },\n          ];\n        }\n      });\n      setDrinkDetails(drinks);\n    });\n    fetchFoods().then(({ meals }) => setRecMeal(meals));\n  }, [id]);\n\n  if (!drinkDetails.length) {\n    return <h1>Loading...</h1>;\n  }\n\n  const handleFavorite = () => {\n    const objSave = drinkDetails.map((item) => {\n      const obj = {\n        id: item.idDrink,\n        type: 'bebida',\n        area: '',\n        category: item.strCategory,\n        alcoholicOrNot: item.strAlcoholic,\n        name: item.strDrink,\n        image: item.strDrinkThumb,\n      };\n      return obj;\n    })[0];\n    handleFavoriteAuxiliar(objSave, setIcon, icon);\n  };\n  return (\n    <div>\n      { drinkDetails.map((item) => {\n        const all = (\n          <div key={ item.idDrink }>\n            <img\n              src={ item.strDrinkThumb }\n              alt={ item.strDrink }\n              data-testid=\"recipe-photo\"\n              width=\"250px\"\n            />\n            <h1 data-testid=\"recipe-title\">{ item.strDrink }</h1>\n            <input\n              type=\"image\"\n              alt=\"share\"\n              src={ shareImage }\n              data-testid=\"share-btn\"\n              onClick={ () => handleShare(setLink) }\n            />\n            <p>{ link }</p>\n            <input\n              type=\"image\"\n              alt=\"fav\"\n              src={ icon }\n              data-testid=\"favorite-btn\"\n              onClick={ handleFavorite }\n            />\n            <h2 data-testid=\"recipe-category\">{ item.strAlcoholic }</h2>\n            <div>\n              { ingredients.map(({ strMeasure, strIngredient }, i) => {\n                const ingrID = `${i}-ingredient-name-and-measure`;\n                const allIngredients = (\n                  <p data-testid={ ingrID } key={ ingrID }>\n                    { `${strMeasure} ${strIngredient}` }\n                  </p>\n                );\n                return allIngredients;\n              }) }\n            </div>\n            <p data-testid=\"instructions\">{ item.strInstructions }</p>\n            <Carousel recommendation={ recMeal } />\n            { handleButton(history) }\n          </div>\n        );\n        return all;\n      }) }\n    </div>\n  );\n}\nDrinkDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }).isRequired,\n};\nexport default DrinkDetails;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { fetchFoodById } from '../services/mealAPI';\nimport '../styles/mainFoodInProgress.css';\nimport shareImage from '../images/shareIcon.svg';\nimport { getFavorites, handleFavoriteAuxiliar }\n  from '../auxiliar/auxiliarFunctions';\n\nfunction MainFoodsInProgress({ history, match: { params: { id } } }) {\n  const auxiliar = () => {\n    const getLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!getLocalStorage) {\n      return [];\n    }\n    if (Object.keys(getLocalStorage).includes('meals')) {\n      const findItem = [getLocalStorage].find((storage) => Object\n        .keys(storage.meals).includes(id));\n      if (findItem) return getLocalStorage.meals[id];\n      return [];\n    }\n    return [];\n  };\n  const localStorageChecked = auxiliar();\n  const isFavorite = getFavorites(id);\n  const [foodInfo, setFoodInfo] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [link, setLink] = useState('');\n  const [icon, setIcon] = useState(isFavorite);\n  const [disable, setDisable] = useState(true);\n  const [checkArray, SetCheckArray] = useState(localStorageChecked);\n\n  useEffect(() => {\n    fetchFoodById(id).then(({ meals }) => setFoodInfo(meals));\n  }, [id]);\n\n  useEffect(() => {\n    if (ingredients.length === 0) {\n      const MAX_INGREDIENT = 20;\n      foodInfo.map((item) => {\n        let arr = [];\n        for (let i = 1; i <= MAX_INGREDIENT; i += 1) {\n          const itemIngredient = `strIngredient${i}`;\n          const itemMeasure = `strMeasure${i}`;\n          if (item[itemIngredient].length === 0) {\n            setIngredients([...arr]);\n            break;\n          }\n          arr = [\n            ...arr,\n            { strMeasure: item[itemMeasure], strIngredient: item[itemIngredient] },\n          ];\n        }\n        return ingredients;\n      });\n    }\n  }, [foodInfo, ingredients]);\n\n  const RedirectToRecipesMade = () => {\n    const dateNow = new Date();\n    const formatDate = `${dateNow}`.split(' GMT')[0];\n    const objToSave = foodInfo.map((item) => {\n      let tagFormat;\n      if (item.strTags) {\n        tagFormat = item.strTags.split(', ');\n      } else {\n        tagFormat = [];\n      }\n      const obj = {\n        id: item.idMeal,\n        type: 'comida',\n        area: item.strArea,\n        category: item.strCategory,\n        alcoholicOrNot: '',\n        name: item.strMeal,\n        image: item.strMealThumb,\n        doneDate: formatDate,\n        tags: tagFormat,\n      };\n      return obj;\n    });\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (!doneRecipes) {\n      localStorage.setItem('doneRecipes', JSON.stringify(objToSave));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, ...objToSave]));\n    }\n    history.push('/receitas-feitas');\n  };\n\n  useEffect(() => {\n    function saveInLocal() {\n      if (checkArray.length) {\n        let getLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n        if (!getLocal) {\n          const objectStore = {};\n          localStorage.setItem('inProgressRecipes', JSON.stringify(objectStore));\n          getLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n        }\n        const objeto = {\n          [id]: checkArray,\n        };\n        localStorage.setItem('inProgressRecipes',\n          JSON.stringify({ ...getLocal, meals: { ...getLocal.meals, ...objeto } }));\n      }\n    }\n    saveInLocal();\n  }, [checkArray, id]);\n\n  const riskCompleteds = ({ target: { value, checked } }, index) => {\n    if (checked) {\n      SetCheckArray([...checkArray, index]);\n    }\n\n    const labelCheckbox = document.querySelectorAll('.label-checkbox');\n    labelCheckbox.forEach((inputs) => {\n      if (inputs.textContent === value) {\n        inputs.className = 'texto-riscado';\n      }\n    });\n  };\n\n  const handleFavorite = () => {\n    const objSave = foodInfo.map((item) => {\n      const obj = {\n        id: item.idMeal,\n        type: 'comida',\n        area: item.strArea,\n        category: item.strCategory,\n        alcoholicOrNot: '',\n        name: item.strMeal,\n        image: item.strMealThumb,\n      };\n      return obj;\n    })[0];\n    handleFavoriteAuxiliar(objSave, setIcon, icon);\n  };\n\n  const handleLinks = () => {\n    setLink('Link copiado!');\n    const actualLocation = String(window.location.href);\n    const a = actualLocation.split('/');\n    const actual = `${a[0]}//${a[1]}${a[2]}/${a[3]}/${a[4]}`;\n    const input = document.createElement('input');\n    document.body.appendChild(input);\n    input.value = actual;\n    input.select();\n    document.execCommand('copy');\n    document.body.removeChild(input);\n  };\n\n  const verifyChecked = () => {\n    const input = document.querySelectorAll('.inputs-checkbox');\n    input.forEach((inputs) => {\n      if (inputs.checked === true) setDisable(false);\n      else setDisable(true);\n    });\n  };\n\n  return (\n    <div>\n      { foodInfo.map((food) => {\n        const allFood = (\n          <div key={ food.idMeal }>\n            <img\n              src={ food.strMealThumb }\n              alt={ food.strMeal }\n              data-testid=\"recipe-photo\"\n              width=\"250px\"\n            />\n            <h1 data-testid=\"recipe-title\">{ food.strMeal }</h1>\n            <h2 data-testid=\"recipe-category\">{ food.strCategory }</h2>\n            <p>{ link }</p>\n            <button type=\"button\" data-testid=\"share-btn\" onClick={ handleLinks }>\n              <img src={ shareImage } alt=\"botao-compartilhar\" />\n            </button>\n            <button type=\"button\" onClick={ handleFavorite }>\n              <img src={ icon } alt=\"icone-de-favoritar\" data-testid=\"favorite-btn\" />\n            </button>\n            <p data-testid=\"instructions\">{ food.strInstructions }</p>\n          </div>\n        );\n        return allFood;\n      }) }\n      <div>\n        { ingredients.map(({ strMeasure, strIngredient }, index) => {\n          const ingrID = `${index}-ingredient-step`;\n          return (\n            <label\n              onChange={ verifyChecked }\n              data-testid={ ingrID }\n              key={ index }\n              htmlFor={ index }\n              className=\"label-checkbox\"\n            >\n              <br />\n              { `${strMeasure} ${strIngredient}` }\n              <input\n                checked={ checkArray.includes(index) }\n                className=\"inputs-checkbox\"\n                id={ index }\n                type=\"checkbox\"\n                key={ index }\n                value={ `${strMeasure} ${strIngredient}` }\n                onClick={ (e) => riskCompleteds(e, index) }\n              />\n            </label>);\n        }) }\n      </div>\n      <button\n        disabled={ disable }\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        onClick={ RedirectToRecipesMade }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n}\n\nMainFoodsInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default MainFoodsInProgress;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { fetchDrinkById } from '../services/cocktailAPI';\nimport '../styles/mainFoodInProgress.css';\nimport shareImage from '../images/shareIcon.svg';\nimport { getFavorites, handleFavoriteAuxiliar }\n  from '../auxiliar/auxiliarFunctions';\n\nfunction MainDrinkInProgress({ history, match: { params: { id } } }) {\n  const auxiliar = () => {\n    const getLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!getLocalStorage) {\n      return [];\n    }\n    if (Object.keys(getLocalStorage).includes('drinks')) {\n      const findItem = [getLocalStorage].find((storage) => Object\n        .keys(storage.drinks).includes(id));\n      if (findItem) return getLocalStorage.drinks[id];\n      return [];\n    }\n    return [];\n  };\n  const localStorageChecked = auxiliar();\n  const isFavorite = getFavorites(id);\n  const [drinkInfo, setdrinkInfo] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [disable, setDisable] = useState(true);\n  const [link, setLink] = useState('');\n  const [icon, setIcon] = useState(isFavorite);\n  const [checkArray, SetCheckArray] = useState(localStorageChecked);\n\n  useEffect(() => {\n    fetchDrinkById(id).then(({ drinks }) => setdrinkInfo(drinks));\n  }, [id]);\n\n  useEffect(() => {\n    if (ingredients.length === 0) {\n      const MAX_INGREDIENT = 15;\n      drinkInfo.map((item) => {\n        let arr = [];\n        for (let i = 1; i <= MAX_INGREDIENT; i += 1) {\n          const itemIngredient = `strIngredient${i}`;\n          const itemMeasure = `strMeasure${i}`;\n          if (item[itemIngredient] === null || item[itemIngredient].length === 0) {\n            break;\n          }\n          arr = [\n            ...arr,\n            { strMeasure: item[itemMeasure], strIngredient: item[itemIngredient] },\n          ];\n        }\n        return setIngredients(arr);\n      });\n    }\n  });\n\n  useEffect(() => {\n    function saveInLocal() {\n      if (checkArray.length) {\n        let getLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n        if (!getLocal) {\n          const objectStore = {};\n          localStorage.setItem('inProgressRecipes', JSON.stringify(objectStore));\n          getLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n        }\n        const objeto = {\n          [id]: checkArray,\n        };\n        localStorage.setItem('inProgressRecipes',\n          JSON.stringify({ ...getLocal, drinks: { ...getLocal.drinks, ...objeto } }));\n      }\n    }\n    saveInLocal();\n  }, [checkArray, id]);\n\n  const RedirectToRecipesMade = () => {\n    const dateNow = new Date();\n    const formatDate = `${dateNow}`.split(' GMT')[0];\n    const objToSave = drinkInfo.map((item) => {\n      let tagFormat;\n      if (item.strTags) {\n        tagFormat = item.strTags.split(', ');\n      } else {\n        tagFormat = [];\n      }\n      const obj = {\n        id: item.idDrink,\n        type: 'bebida',\n        area: '',\n        category: item.strCategory,\n        alcoholicOrNot: item.strAlcoholic,\n        name: item.strDrink,\n        image: item.strDrinkThumb,\n        doneDate: formatDate,\n        tags: tagFormat,\n      };\n      return obj;\n    });\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (!doneRecipes) {\n      localStorage.setItem('doneRecipes', JSON.stringify(objToSave));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, ...objToSave]));\n    }\n    history.push('/receitas-feitas');\n  };\n\n  const riskCompleteds = ({ target: { value, checked } }, index) => {\n    if (checked) {\n      SetCheckArray([...checkArray, index]);\n    }\n\n    const labelCheckbox = document.querySelectorAll('.label-checkbox');\n    labelCheckbox.forEach((inputs) => {\n      if (inputs.textContent === value) {\n        inputs.className = 'texto-riscado';\n      }\n    });\n  };\n\n  const handleLinks = () => {\n    setLink('Link copiado!');\n    const actualLocation = String(window.location.href);\n    const a = actualLocation.split('/');\n    const actual = `${a[0]}//${a[1]}${a[2]}/${a[3]}/${a[4]}`;\n    const input = document.createElement('input');\n    document.body.appendChild(input);\n    input.value = actual;\n    input.select();\n    document.execCommand('copy');\n    document.body.removeChild(input);\n  };\n\n  const verifyChecked = () => {\n    const input = document.querySelectorAll('.inputs-checkbox');\n    input.forEach((inputs) => {\n      if (inputs.checked === true) setDisable(false);\n      else setDisable(true);\n    });\n  };\n\n  const handleFavorite = () => {\n    const objSave = drinkInfo.map((item) => {\n      const obj = {\n        id: item.idDrink,\n        type: 'bebida',\n        area: '',\n        category: item.strCategory,\n        alcoholicOrNot: item.strAlcoholic,\n        name: item.strDrink,\n        image: item.strDrinkThumb,\n      };\n      return obj;\n    })[0];\n    handleFavoriteAuxiliar(objSave, setIcon, icon);\n  };\n\n  return (\n    <div>\n      { drinkInfo.map((drink) => {\n        const allDrink = (\n          <div key={ drink.idDrink }>\n            <img\n              src={ drink.strDrinkThumb }\n              alt={ drink.strDrink }\n              data-testid=\"recipe-photo\"\n              width=\"250px\"\n            />\n            <h1 data-testid=\"recipe-title\">{ drink.strDrink }</h1>\n            <h2 data-testid=\"recipe-category\">{ drink.strCategory }</h2>\n            <p>{ link }</p>\n            <button type=\"button\" data-testid=\"share-btn\" onClick={ handleLinks }>\n              <img src={ shareImage } alt=\"botao-compartilhar\" />\n            </button>\n            <button type=\"button\" onClick={ handleFavorite }>\n              <img src={ icon } alt=\"icone-de-favoritar\" data-testid=\"favorite-btn\" />\n            </button>\n            <p data-testid=\"instructions\">{ drink.strInstructions }</p>\n          </div>\n        );\n        return allDrink;\n      }) }\n      <div>\n        { ingredients.map(({ strMeasure, strIngredient }, i) => {\n          const ingrID = `${i}-ingredient-step`;\n          return (\n            <label\n              data-testid={ ingrID }\n              key={ i }\n              htmlFor={ i }\n              className=\"label-checkbox\"\n              onChange={ verifyChecked }\n            >\n              <br />\n              { `${strMeasure} ${strIngredient}` }\n              <input\n                checked={ checkArray.includes(i) }\n                className=\"inputs-checkbox\"\n                id={ i }\n                type=\"checkbox\"\n                key={ i }\n                value={ `${strMeasure} ${strIngredient}` }\n                onClick={ (e) => riskCompleteds(e, i) }\n              />\n            </label>);\n        }) }\n      </div>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ disable }\n        onClick={ RedirectToRecipesMade }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n}\n\nMainDrinkInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default MainDrinkInProgress;\n","import { createContext } from 'react';\n\nconst FavoritesContext = createContext();\n\nexport default FavoritesContext;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\n\nexport default function ShareButton({ recipeId, isFood, index }) {\n  const [displayToast, setDisplayToast] = useState(false);\n  const WAIT_TIME = 3000;\n\n  function handleShareClick() {\n    copy(`http://localhost:3000/${isFood ? 'comidas' : 'bebidas'}/${recipeId}`);\n    setDisplayToast(true);\n\n    setTimeout(() => {\n      setDisplayToast(false);\n    }, WAIT_TIME);\n  }\n\n  return (\n    <>\n      {displayToast && <p className=\"toast\">Link copiado!</p>}\n      <button\n        type=\"button\"\n        data-testid={ `${index !== undefined ? `${index}-horizontal-` : ''}share-btn` }\n        onClick={ handleShareClick }\n        src={ shareIcon }\n      >\n        <img src={ shareIcon } alt=\"compartilhar\" />\n      </button>\n    </>\n  );\n}\n\nShareButton.propTypes = {\n  recipeId: PropTypes.string,\n  isFood: PropTypes.string,\n  isDrink: PropTypes.string,\n  index: PropTypes.number,\n}.isRequired;\n","import React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport FavoritesContext from '../context/FavoritesContext';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nexport default function UnfavoriteButton({ recipe, index }) {\n  const { favorites, setFavorites } = useContext(FavoritesContext);\n\n  const [isFavorite, setIsFavorite] = useState(\n    favorites.map((fav) => fav.id).includes(recipe.id),\n  );\n\n  function handleFavoriteClick() {\n    const updatedFavorites = favorites.filter(\n      (fav) => fav.id !== (recipe.id),\n    );\n    setFavorites(updatedFavorites);\n  }\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteRecipes) {\n      const isFavoriteLS = favoriteRecipes.map((fav) => fav.id).includes(recipe.id);\n      if (isFavoriteLS) setIsFavorite(true);\n    }\n  }, [recipe]);\n\n  return (\n    <button\n      type=\"button\"\n      onClick={ () => {\n        setIsFavorite(!isFavorite);\n        handleFavoriteClick();\n      } }\n    >\n      <img\n        data-testid={ `${index}-horizontal-favorite-btn` }\n        src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n        alt=\"favoritar\"\n      />\n    </button>\n  );\n}\n\nUnfavoriteButton.propTypes = {\n  recipe: PropTypes.shape({}),\n  isFood: PropTypes.bool,\n}.isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ShareButton from './ShareButton';\nimport UnfavoriteButton from './UnfavoriteButton';\n\nimport '../styles/FavoriteRecipeCard.css';\n\nexport default function FavoriteRecipeCard({ recipe, index }) {\n  const isFood = recipe.type === 'comida';\n\n  return (\n    <div className=\"favorite-recipe-card\">\n      <Link to={ `/${isFood ? 'comidas' : 'bebidas'}/${recipe.id}` }>\n        <img\n          src={ recipe.image }\n          alt={ recipe.name }\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </Link>\n      <div className=\"favorite-recipe-info\">\n        <span data-testid={ `${index}-horizontal-top-text` }>\n          {isFood ? `${recipe.area} - ${recipe.category}` : recipe.alcoholicOrNot}\n        </span>\n\n        <Link to={ `/${isFood ? 'comidas' : 'bebidas'}/${recipe.id}` }>\n          <p data-testid={ `${index}-horizontal-name` }>\n            {recipe.name}\n          </p>\n        </Link>\n        <div className=\"favorite-card-buttons-container\">\n          <ShareButton\n            recipeId={ recipe.id }\n            isFood={ isFood }\n            index={ index }\n          />\n\n          <UnfavoriteButton\n            recipe={ recipe }\n            index={ index }\n          />\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nFavoriteRecipeCard.propTypes = {\n  recipe: PropTypes.shape({}),\n  index: PropTypes.number,\n}.isRequired;\n","import React, { useContext, useState } from 'react';\nimport Header from '../components/Header';\nimport FavoritesContext from '../context/FavoritesContext';\nimport FavoriteRecipeCard from '../components/FavoriteRecipeCard';\n\nexport default function FavoriteRecipes() {\n  const { favorites } = useContext(FavoritesContext);\n  const [filter, setFilter] = useState('');\n\n  const filteredFavorites = filter\n    ? favorites.filter((recipe) => recipe.type === filter) : favorites;\n  return (\n    <div>\n      <Header\n        title=\"Receitas Favoritas\"\n        enableSearchIcon={ false }\n        showRender={ false }\n      />\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          value=\"\"\n          onClick={ (ev) => setFilter(ev.target.value) }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          value=\"comida\"\n          onClick={ (ev) => setFilter(ev.target.value) }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          value=\"bebida\"\n          onClick={ (ev) => setFilter(ev.target.value) }\n        >\n          Drink\n        </button>\n        {filteredFavorites.map((fav, index) => (\n          <FavoriteRecipeCard key={ index } recipe={ fav } index={ index } />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction Explore() {\n  return (\n    <section>\n      <Header title=\"Explorar\" showRender={ false } />\n\n      <Link to=\"/explorar/comidas\">\n        <button data-testid=\"explore-food\" type=\"button\">Explorar Comidas</button>\n      </Link>\n\n      <Link to=\"/explorar/bebidas\">\n        <button data-testid=\"explore-drinks\" type=\"button\">Explorar Bebidas</button>\n      </Link>\n\n      <Footer />\n    </section>\n  );\n}\n\nexport default Explore;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchRandomMeal } from '../services/mealAPI';\n\nfunction ExploreFoods() {\n  const [id, setId] = useState('');\n\n  useEffect(() => {\n    async function getRandomMeal() {\n      const data = await fetchRandomMeal();\n      setId(data.meals[0].idMeal);\n    }\n    getRandomMeal();\n  }, []);\n\n  const createBtn = (testId, text) => (\n    <button data-testid={ testId } type=\"button\">{ text }</button>\n  );\n\n  return (\n    <section>\n      <Header title=\"Explorar Comidas\" showRender={ false } />\n\n      <Link to=\"/explorar/comidas/ingredientes\">\n        { createBtn('explore-by-ingredient', 'Por Ingredientes') }\n      </Link>\n\n      <Link to=\"/explorar/comidas/area\">\n        { createBtn('explore-by-area', 'Por Local de Origem') }\n      </Link>\n\n      <Link to={ `/comidas/${id}` }>\n        { createBtn('explore-surprise', 'Me Surpreenda!') }\n      </Link>\n\n      <Footer />\n    </section>\n  );\n}\n\nexport default ExploreFoods;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchRandomDrink } from '../services/cocktailAPI';\n\nfunction ExploreDrinks() {\n  const [id, setId] = useState('');\n\n  useEffect(() => {\n    async function getRandomDrink() {\n      const data = await fetchRandomDrink();\n      setId(data.drinks[0].idDrink);\n    }\n    getRandomDrink();\n  }, []);\n\n  const createBtn = (testId, text) => (\n    <button data-testid={ testId } type=\"button\">{ text }</button>\n  );\n\n  return (\n    <section>\n      <Header title=\"Explorar Bebidas\" showRender={ false } />\n\n      <Link to=\"/explorar/bebidas/ingredientes\">\n        { createBtn('explore-by-ingredient', 'Por Ingredientes') }\n      </Link>\n\n      <Link to={ `/bebidas/${id}` }>\n        { createBtn('explore-surprise', 'Me Surpreenda!') }\n      </Link>\n\n      <Footer />\n    </section>\n  );\n}\n\nexport default ExploreDrinks;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { number, object, string } from 'prop-types';\n\nfunction IngredientCard({ ingredient, type, index }) {\n  const [whichType] = useState(() => {\n    if (type === 'comidas') {\n      return `https://www.themealdb.com/images/ingredients/${ingredient.strIngredient}-Small.png`;\n    }\n    return `https://www.thecocktaildb.com/images/ingredients/${ingredient.strIngredient1}-Small.png`;\n  });\n\n  const handleClick = () => {\n    let ingredientToSave;\n    if (type === 'comidas') {\n      ingredientToSave = ingredient.strIngredient;\n    } else {\n      ingredientToSave = ingredient.strIngredient1;\n    }\n    localStorage.setItem('filterIngredient', ingredientToSave);\n  };\n\n  return (\n    <Link\n      to={ `/${type}` }\n      onClick={ handleClick }\n    >\n      <div data-testid={ `${index}-ingredient-card` }>\n        <img\n          data-testid={ `${index}-card-img` }\n          src={ whichType }\n          alt=\"ingredient-thumbnail\"\n        />\n        <h3 data-testid={ `${index}-card-name` }>\n          { type === 'comidas' ? ingredient.strIngredient : ingredient.strIngredient1 }\n        </h3>\n      </div>\n    </Link>\n  );\n}\n\nIngredientCard.propTypes = {\n  ingredient: object,\n  type: string,\n  index: number,\n}.isRequired;\n\nexport default IngredientCard;\n","import React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport IngredientCard from '../components/IngredientCard';\n\nfunction Ingredients() {\n  const [ingredients, setIngredients] = useState([]);\n  const maxLength = 12;\n\n  const [pathname] = useState(() => {\n    if (window.location.href.includes('bebidas')) return 'bebidas';\n    if (window.location.href.includes('comidas')) return 'comidas';\n  });\n\n  useEffect(() => {\n    if (pathname === 'comidas') {\n      fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list')\n        .then((r) => r.json()\n          .then((data) => setIngredients(data.meals\n            .filter((__, index) => index < maxLength))));\n    } else {\n      fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list')\n        .then((r) => r.json()\n          .then((data) => setIngredients(data.drinks\n            .filter((__, index) => index < maxLength))));\n    }\n  }, [pathname]);\n\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes\" showRender={ false } />\n      { ingredients.length && ingredients.map((ingredient, index) => (\n        <IngredientCard\n          ingredient={ ingredient }\n          index={ index }\n          type={ pathname }\n          key={ index }\n        />\n      )) }\n      <Footer />\n    </div>\n  );\n}\n\nexport default Ingredients;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport shareImage from '../images/shareIcon.svg';\nimport { handleShare } from '../auxiliar/auxiliarFunctions';\n\nfunction FinishedDrinkCard({ card, index }) {\n  const [link, setLink] = useState();\n  const { image, name, doneDate, tags, alcoholicOrNot, id } = card;\n  return (\n    <div key={ index }>\n      <Link to={ `/bebidas/${id}` }>\n        <img\n          src={ image }\n          alt=\"card-recipe\"\n          data-testid={ `${index}-horizontal-image` }\n          width=\"250px\"\n        />\n      </Link>\n      <h3 data-testid={ `${index}-horizontal-top-text` }>{ alcoholicOrNot }</h3>\n      <Link to={ `/bebidas/${id}` }>\n        <h2 data-testid={ `${index}-horizontal-name` }>{ name }</h2>\n      </Link>\n      <p data-testid={ `${index}-horizontal-done-date` }>{ doneDate }</p>\n      <input\n        type=\"image\"\n        alt=\"share\"\n        src={ shareImage }\n        data-testid={ `${index}-horizontal-share-btn` }\n        onClick={ () => handleShare(setLink, `bebidas/${id}`) }\n      />\n      <p>{ link }</p>\n      { tags.map((item) => {\n        const tagItem = (\n          <p key={ item } data-testid={ `${index}-${item}-horizontal-tag` }>{ item }</p>\n        );\n        return tagItem;\n      }) }\n    </div>\n  );\n}\n\nFinishedDrinkCard.propTypes = {\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    image: PropTypes.string,\n    alcoholicOrNot: PropTypes.string,\n    name: PropTypes.string,\n    doneDate: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default FinishedDrinkCard;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport shareImage from '../images/shareIcon.svg';\nimport { handleShare } from '../auxiliar/auxiliarFunctions';\n\nfunction FinishedMealCard({ card, index }) {\n  const [link, setLink] = useState();\n  const { image, area, category, name, doneDate, tags, id } = card;\n  return (\n    <div key={ index }>\n      <Link to={ `/comidas/${id}` }>\n        <img\n          src={ image }\n          alt=\"card-recipe\"\n          data-testid=\"0-horizontal-image\"\n          width=\"250px\"\n        />\n      </Link>\n      <h3 data-testid={ `${index}-horizontal-top-text` }>{ `${area} - ${category}` }</h3>\n      <Link to={ `/comidas/${id}` }>\n        <h2 data-testid={ `${index}-horizontal-name` }>{ name }</h2>\n      </Link>\n      <p data-testid={ `${index}-horizontal-done-date` }>{ doneDate }</p>\n      <input\n        type=\"image\"\n        alt=\"share\"\n        src={ shareImage }\n        data-testid={ `${index}-horizontal-share-btn` }\n        onClick={ () => handleShare(setLink, `comidas/${id}`) }\n      />\n      <p>{ link }</p>\n      { tags.map((item) => {\n        const tagItem = (\n          <p key={ item } data-testid={ `${index}-${item}-horizontal-tag` }>{ item }</p>\n        );\n        return tagItem;\n      }) }\n    </div>\n  );\n}\n\nFinishedMealCard.propTypes = {\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    image: PropTypes.string,\n    area: PropTypes.string,\n    category: PropTypes.string,\n    name: PropTypes.string,\n    doneDate: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default FinishedMealCard;\n","import React, { useEffect, useState } from 'react';\nimport FinishedDrinkCard from '../components/FinishedDrinkCard';\nimport FinishedMealCard from '../components/FinishedMealCard';\nimport Header from '../components/Header';\n\nfunction RecipesMade() {\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    const getInfo = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (getInfo) {\n      setRecipes(getInfo);\n    }\n  }, []);\n\n  const handleFood = () => {\n    const getInfo = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (getInfo) {\n      const filterFood = getInfo.filter(({ type }) => type === 'comida');\n      setRecipes(filterFood);\n    }\n  };\n\n  const handleDrink = () => {\n    const getInfo = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (getInfo) {\n      const filterDrink = getInfo.filter(({ type }) => type === 'bebida');\n      setRecipes(filterDrink);\n    }\n  };\n\n  const handleAll = () => {\n    const getAll = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (getAll) {\n      setRecipes(getAll);\n    }\n  };\n\n  return (\n    <div>\n      <Header title=\"Receitas Feitas\" showRender={ false } />\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ handleAll }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ handleFood }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ handleDrink }\n        >\n          Drinks\n        </button>\n      </div>\n      { recipes.map((item, index) => {\n        let card;\n        if (item.type === 'comida') {\n          card = <FinishedMealCard key={ index } card={ item } index={ index } />;\n        } else {\n          card = <FinishedDrinkCard key={ index } card={ item } index={ index } />;\n        }\n        return card;\n      }) }\n    </div>\n  );\n}\n\nexport default RecipesMade;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchByArea, fetchFoods, fetchFilterByArea } from '../services/mealAPI';\n\nfunction Area() {\n  const LOCATION = useLocation().pathname;\n  const MAX = 12;\n  const [area, SetArea] = useState([]);\n  const [receitas, setReceitas] = useState();\n  const [areaSelected, setAreaSelected] = useState({\n    selected: 'All',\n  });\n  useEffect(() => {\n    const GetAreaOrigin = async () => {\n      const list = await fetchByArea();\n      const { meals } = list;\n      const all = { strArea: 'All' };\n      SetArea([all, ...meals]);\n      const foods = await fetchFoods();\n      setReceitas([...foods.meals]);\n    };\n    GetAreaOrigin();\n  }, []);\n\n  useEffect(() => {\n    const GetRecipes = async () => {\n      if (areaSelected.selected === 'All') {\n        const foods = await fetchFoods();\n        setReceitas([...foods.meals]);\n      } else {\n        const list = await fetchFilterByArea(areaSelected.selected);\n        const { meals } = list;\n        setReceitas([...meals]);\n      }\n    };\n    GetRecipes();\n  }, [areaSelected]);\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setAreaSelected({\n      selected: value,\n    });\n  }\n  const ids = 'PageNotFound';\n  if (!area || !receitas) return <p>Loading...</p>;\n  if (LOCATION === '/explorar/bebidas/area') return <p data-testid={ ids }>Not Found</p>;\n  return (\n    <div>\n      <Header title=\"Explorar Origem\" />\n      <select data-testid=\"explore-by-area-dropdown\" onChange={ handleChange }>\n        {\n          area.map(({ strArea }, index) => (\n            <option\n              data-testid={ `${strArea}-option` }\n              value={ strArea }\n              key={ index }\n            >\n              { strArea }\n            </option>\n          ))\n        }\n      </select>\n      {\n        receitas && receitas.slice(0, MAX).map((recipe, index) => (\n          <Link to={ `/comidas/${recipe.idMeal}` } key={ index }>\n            <div data-testid={ `${index}-recipe-card` }>\n              <img\n                data-testid={ `${index}-card-img` }\n                src={ recipe.strMealThumb }\n                alt=\"thumbnail recipe\"\n                width=\"200\"\n              />\n              <p data-testid={ `${index}-card-name` }>\n                { recipe.strMeal }\n              </p>\n            </div>\n          </Link>\n        ))\n      }\n      <Footer />\n    </div>\n  );\n}\n\nexport default Area;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodContext from '../context/FoodContext';\nimport { fetchFoods, fetchFoodCategories } from '../services/mealAPI';\n\nexport default function FoodProvider({ children }) {\n  const [foods, setFoods] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    fetchFoods().then((data) => {\n      setFoods(data.meals);\n    });\n    fetchFoodCategories().then((data) => {\n      setCategories(data.meals);\n    });\n  }, []);\n\n  return (\n    <FoodContext.Provider\n      value={ {\n        foods,\n        setFoods,\n        categories,\n        setCategories,\n      } }\n    >\n      {children}\n    </FoodContext.Provider>\n  );\n}\n\nFoodProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport DrinkContext from '../context/DrinkContext';\nimport { fetchCocktails, fetchCocktailCategories } from '../services/cocktailAPI';\n\nexport default function DrinkProvider({ children }) {\n  const [drinks, setDrinks] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    fetchCocktails().then((data) => {\n      setDrinks(data.drinks);\n    });\n    fetchCocktailCategories().then((data) => {\n      setCategories(data.drinks);\n    });\n  }, []);\n\n  return (\n    <DrinkContext.Provider\n      value={ {\n        drinks,\n        setDrinks,\n        categories,\n        setCategories,\n      } }\n    >\n      {children}\n    </DrinkContext.Provider>\n  );\n}\n\nDrinkProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FavoritesContext from '../context/FavoritesContext';\n\nexport default function FavoritesProvider({ children }) {\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem('favoriteRecipes')) {\n      setFavorites(JSON.parse(localStorage.getItem('favoriteRecipes')));\n    } else {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (favorites) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favorites));\n    }\n  }, [favorites]);\n\n  return (\n    <FavoritesContext.Provider\n      value={ {\n        favorites,\n        setFavorites,\n      } }\n    >\n      {children}\n    </FavoritesContext.Provider>\n  );\n}\n\nFavoritesProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\nimport MainFoods from './pages/MainFoods';\nimport MainDrinks from './pages/MainDrinks';\nimport FoodDetails from './pages/FoodDetails';\nimport DrinkDetails from './pages/DrinkDetails';\nimport mainFoodsInProgress from './pages/mainFoodsInProgress';\nimport mainDrinksInProgress from './pages/mainDrinksInProgress';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\nimport Explore from './pages/Explore';\nimport ExploreFoods from './pages/ExploreFoods';\nimport ExploreDrinks from './pages/ExploreDrinks';\nimport Ingredients from './pages/Ingredients';\nimport RecipesMade from './pages/RecipesMade';\nimport Area from './pages/Area';\n\nimport FoodProvider from './provider/FoodProvider';\nimport DrinkProvider from './provider/DrinkProvider';\nimport FavoritesProvider from './provider/FavoritesProvider';\n\nfunction App() {\n  return (\n    <FoodProvider>\n      <DrinkProvider>\n        <FavoritesProvider>\n          <Switch>\n            <Route exact path=\"/ProjectRecipeApp\" component={ Login } />\n            <Route exact path=\"/comidas\" component={ MainFoods } />\n            <Route exact path=\"/bebidas\" component={ MainDrinks } />\n            <Route exact path=\"/perfil\" component={ Profile } />\n            <Route exact path=\"/comidas/:id\" component={ FoodDetails } />\n            <Route exact path=\"/bebidas/:id\" component={ DrinkDetails } />\n            <Route path=\"/comidas/:id/in-progress\" component={ mainFoodsInProgress } />\n            <Route path=\"/bebidas/:id/in-progress\" component={ mainDrinksInProgress } />\n            <Route exact path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n            <Route exact path=\"/explorar\" component={ Explore } />\n            <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\n            <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n            <Route path=\"/explorar/:type/ingredientes\" component={ Ingredients } />\n            <Route path=\"/explorar/:type/area\" component={ Area } />\n            <Route exact path=\"/receitas-feitas\" component={ RecipesMade } />\n          </Switch>\n        </FavoritesProvider>\n      </DrinkProvider>\n    </FoodProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}